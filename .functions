#!/bin/bash
# Title:        bash_functions
# Description:  bash functions that use variables/have arg error checking
# Author:       Spencer Sutterlin
# Email:        spencerucla@gmail.com

# Mine: print my custom bash aliases and functions
mine() {
  local a=$(alias | awk '{print $2}' | awk -F'=' '{print $1}')
  local f=$(declare -F | grep -v " _" | awk '{ print $3 }')
  echo -e "${a}\n${f}" | sort | column
  echo
  echo "Try 'type <command>' for more information."
}

# Mk+ch dir: "mcd <dir>"
mcd() {
  if [ -z "$1" ]; then
    echo "ERROR: directory name arg required"
  else
    mkdir -p $1 && cd $1
  fi
}

# Fd+fzf: "fcd [fuzzy-dir-pattern]"
fcd() {
  local dir
  dir=$(fd -t d | fzf +m --query="$1")
  [ -n "$dir" ] && cd "$dir"
}

# Vim+fzf: "v [fuzzy-file-pattern]"
v() {
  local file
  file=$(fzf --query="$1" --select-1)
  [ -n "$file" ] && vim "$file"
}

# John Wick: "wick <name>"
# Kill any and all processes containing <name>
wick() {
  ps aux | grep $1 | grep -v grep | awk '{print $2}' | xargs kill -9
}

# Liam Neeson (Taken): "liam <file>"
# Kill any and all processes currently using <file>
liam() {
  lsof $1 | grep -v "COMMAND" | awk '{ print $2 }' | xargs kill -9
}

# Tre: "tree" with hidden files and color enabled, ignoring the `.git`
# directory, listing directories first. The output gets piped into `less` with
# options to preserve color and line numbers, unless the output is small enough
# for one screen.
tre() {
  tree -aCsh -I '.git' --dirsfirst "$@" | less -FRNX
}

# Server: start an HTTP server from a directory, optionally specifying the port
server() {
  local port="${1:-8000}"
  # Redefine the default Content-Type to text/plain instead of
  # application/octet-stream allowing "unknown" files to be viewable in-browser
  # as text instead of being downloaded, which makes me happy
  # And serve everything as UTF-8 (although not technically correct, this makes
  # funky characters in binary files render correctly doesn't break anything)
  python -c $'
import SimpleHTTPServer
map = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map
map[""] = "text/plain"
for key, value in map.items():
    map[key] = value + ";charset=UTF-8"
SimpleHTTPServer.test()
' "$port"
}
